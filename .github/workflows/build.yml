name: Build and run test suite

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: package.json
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
      - name: Install modules
        run: |
          npm ci
      - name: Check linting
        run: |
          npm run lint

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: package.json
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
      - name: Install modules
        run: |
          npm ci
      - name: Check formatting
        run: |
          npm run check-format

  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: tac
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5433:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Use Node.js
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        uses: actions/setup-node@v5
        with:
          node-version-file: package.json
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
      - name: Install modules
        run: |
          npm ci
      - name: Build
        run: |
          npm run build
      - name: Check locale files
        run: |
          npm run check-locale-files
      - name: Run tests with coverage
        run: |
          npm run test -- -- --coverage
        env:
          paypal_Secret: ${{ secrets.PAYPAL_SECRET }}
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
