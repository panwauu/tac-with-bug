# Keep in Sync with build.yml

name: Deploy to Heroku

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        uses: actions/setup-node@v5
        with:
          node-version-file: package.json
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
      - name: Deploy - Heroku login credentials
        run: |
          cat > ~/.netrc <<EOF
            machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          EOF
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      - name: Push to heroku
        run: |
          # Ensure the Heroku git remote points to the intended app. Remove any existing remote first to be deterministic.
          git remote remove heroku || true
          git remote add heroku https://git.heroku.com/$HEROKU_APP_NAME.git

          # Configure CI git identity (safe even if no commits are made here)
          git config user.name "Oskar Baumann"
          git config user.email "$HEROKU_EMAIL"

          # Push the currently-checked-out commit to Heroku's main branch. Use force to overwrite.
          git push --force heroku HEAD:main
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      - name: Advance deployed tag
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.TAG_GITHUB_TOKEN}}
          script: |
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "tags/deployed"
              })
            } catch (e) {
              console.log("The deployed tag doesn't exist yet: " + e)
            }
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              ref: "refs/tags/deployed"
            })
      - name: Wait before validating the update
        run: sleep 10
      - name: Sanity check of tac-with-bug
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://tac-with-bug.herokuapp.com"
          method: "GET"
