name: Test PR

on: pull_request

jobs:
  build:

    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: tac        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 16.x
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
        cache: 'npm'
        cache-dependency-path: |
          server/package-lock.json
          client/package-lock.json
    - name: Install shared modules
      run: |
        cd shared
        npm ci
    - name: Install server modules
      run: |
        cd server
        npm ci
    - name: Linting
      run: |
        cd server
        npm run lint
    - name: Build server documentation
      run: |
        cd server
        npm run building
    - name: Run typescript build
      run: |
        cd server
        npm run tsc
    - name: Check Locale Files (All languages and identical keys)
      run: |
        cd server
        npm run checkLocales
    - name: Install client modules
      run: |
        cd client
        npm ci
    - name: Run client lint
      run: |
        cd client
        npm run lint
    - name: Run client tsc
      run: |
        cd client
        npm run tsc
    - name: Build Vue Files
      run: |
        cd client
        npm run build
    - name: Clone Heroku Database
      run: |
        # heroku pg:backups:capture --app=tac-with-bug
        heroku pg:backups:download -o tac.dump --app=tac-with-bug
        pg_restore --verbose --no-acl --no-owner -h localhost -U postgres -d tac -j 8 -p 5432 tac.dump
        psql -h localhost -U postgres -d tac -c 'UPDATE users SET currentsubscription=Null;';
        psql -h localhost -U postgres -d tac -c 'DELETE FROM subscriptions;';
        psql -h localhost -U postgres -d tac -c 'DELETE FROM waitinggames;';
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        PGPASSWORD: postgres
    - name: Run server test
      run: |
        cd server
        npm run test
      env:
        paypal_Secret: ${{ secrets.PAYPAL_SECRET }}
